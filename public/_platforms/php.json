{"key":"php","type":"language","doc_link":"https://docs.sentry.io/platforms/php/","name":"PHP","aliases":[],"categories":[],"body":"<h2 id=\"install\" style=\"position:relative;\">Install</h2>\n<p>To install the PHP SDK, you need to be using Composer in your </p><div class=\"term-wrapper\"><span class=\"term\">project</span><span class=\"description\" role=\"tooltip\" aria-label=\"project definition\">Represents your service in Sentry and allows you to scope events to a distinct application.</span></div>. For more details about Composer, see the <a href=\"https://getcomposer.org/doc/\">Composer documentation</a>.<p></p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\"><span class=\"token function\">composer</span> require sentry/sdk</code></pre></div>\n<h2 id=\"configure\" style=\"position:relative;\">Configure</h2>\n<p>To capture all errors, even the one during the startup of your application, you should initialize the Sentry PHP SDK as soon as possible.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token function\"><span class=\"token punctuation\">\\</span>Sentry<span class=\"token punctuation\">\\</span>init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'dsn'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token string single-quoted-string\">'___PUBLIC_DSN___'</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"usage\" style=\"position:relative;\">Usage</h2>\n<p>In PHP you can either capture a caught exception or capture the last error with captureLastError.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">functionFailsForSure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>Throwable</span> <span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\"><span class=\"token punctuation\">\\</span>Sentry<span class=\"token punctuation\">\\</span>captureException</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$exception</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// OR</span>\n\n<span class=\"token function\"><span class=\"token punctuation\">\\</span>Sentry<span class=\"token punctuation\">\\</span>captureLastError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>"}