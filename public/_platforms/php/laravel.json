{"key":"php.laravel","type":"framework","doc_link":"https://docs.sentry.io/platforms/php/guides/laravel/","name":"Laravel","aliases":[],"categories":[],"body":"<p>This guide is for Laravel 8+. We also provide instructions for <a href=\"https://docs.sentry.io/platforms/php/guides/laravel/other-versions/\">other versions</a> as well as <a href=\"https://docs.sentry.io/platforms/php/guides/laravel/other-versions/lumen/\">Lumen-specific instructions</a>.</p>\n<h2 id=\"install\" style=\"position:relative;\">Install</h2>\n<p>Install the <code>sentry/sentry-laravel</code> package:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\"><span class=\"token function\">composer</span> require sentry/sentry-laravel</code></pre></div>\n<p>Enable capturing unhandled exception to report to Sentry by making the following change to your <code>App/Exceptions/Handler.php</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">register</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">reportable</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">Throwable</span> <span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">bound</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sentry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'sentry'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">captureException</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$e</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Alternatively, you can configure Sentry in your <a href=\"https://docs.sentry.io/platforms/php/guides/laravel/usage/#log-channels\">Laravel Log Channel</a>, allowing you to log <code>info</code> and <code>debug</code> as well.</p>\n<h2 id=\"configure\" style=\"position:relative;\">Configure</h2>\n<p>Configure the Sentry </p><div class=\"term-wrapper\"><span class=\"term\">DSN</span><span class=\"description\" role=\"tooltip\" aria-label=\"DSN definition\">The Data Source Name (DSN) key tells the Sentry SDK where to send events, ensuring they go to the right project.</span></div> with this command:<p></p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell highlight\"><code class=\"language-shell\">php artisan sentry:publish <span class=\"token parameter variable\">--dsn</span><span class=\"token operator\">=</span>___PUBLIC_DSN___</code></pre></div>\n<p>It creates the config file (<code>config/sentry.php</code>) and adds the <code>DSN</code> to your <code>.env</code> file.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell highlight\"><code class=\"language-shell\"><span class=\"token assign-left variable\">SENTRY_LARAVEL_DSN</span><span class=\"token operator\">=</span>___PUBLIC_DSN___</code></pre></div>\n<h2 id=\"verify\" style=\"position:relative;\">Verify</h2>\n<h3 id=\"verify-with-artisan\" style=\"position:relative;\">Verify With Artisan</h3>\n<p>You can test your configuration using the provided <code>sentry:test</code> artisan command:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell highlight\"><code class=\"language-shell\">php artisan sentry:test</code></pre></div>\n<h3 id=\"verify-with-code\" style=\"position:relative;\">Verify With Code</h3>\n<p>You can verify that Sentry is capturing errors in your Laravel application by creating a route that will throw an exception:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token class-name static-context\">Route</span><span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'/debug-sentry'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Exception</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'My first Sentry error!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Visiting this route will trigger an exception that will be captured by Sentry.</p>\n<h2 id=\"performance-monitoring\" style=\"position:relative;\">Performance Monitoring</h2>\n<p>Set <code>traces_sample_rate</code> in <code>config/sentry.php</code> or <code>SENTRY_TRACES_SAMPLE_RATE</code> in your <code>.env</code> to a value greater than <code>0.0</code>. Setting a value greater than <code>0.0</code> will enable Performance Monitoring, <code>0</code> (the default) will disable Performance Monitoring.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell highlight\"><code class=\"language-shell\"><span class=\"token comment\"># Be sure to lower this value in production otherwise you could burn through your quota quickly.</span>\n<span class=\"token assign-left variable\">SENTRY_TRACES_SAMPLE_RATE</span><span class=\"token operator\">=</span><span class=\"token number\">1.0</span></code></pre></div>\n<p>The example configuration above will transmit 100% of captured traces. Be sure to lower this value in production or you could use up your </p><div class=\"term-wrapper\"><span class=\"term\">quota</span><span class=\"description\" role=\"tooltip\" aria-label=\"quota definition\">The monthly number of events that you pay Sentry to track.</span></div> quickly.<p></p>\n<p>You can also be more granular with the sample rate by using the <code>traces_sampler</code> option. Learn more in <a href=\"https://docs.sentry.io/platforms/php/guides/laravel/configuration/filtering/#using-sampling-to-filter-transaction-events\">Using Sampling to Filter Transaction Events</a>.</p>\n<p>Performance data is transmitted using a new event type called \"transactions\", which you can learn about in <a href=\"https://docs.sentry.io/product/sentry-basics/tracing/distributed-tracing/#traces-transactions-and-spans\">Distributed Tracing</a>.</p>\n<h2 id=\"local-development-and-testing\" style=\"position:relative;\">Local Development and Testing</h2>\n<p>When Sentry is installed in your application, it will also be active when you are developing or running tests.</p>\n<p>You most likely don't want errors to be sent to Sentry when you are developing or running tests. To avoid this, set the </p><div class=\"term-wrapper\"><span class=\"term\">DSN</span><span class=\"description\" role=\"tooltip\" aria-label=\"DSN definition\">The Data Source Name (DSN) key tells the Sentry SDK where to send events, ensuring they go to the right project.</span></div> value to <code>null</code> to disable sending errors to Sentry.<p></p>\n<p>You can also do this by not defining <code>SENTRY_LARAVEL_DSN</code> in your <code>.env</code> or by defining it as <code>SENTRY_LARAVEL_DSN=null</code>.</p>\n<p>If you do leave Sentry enabled when developing or running tests, it's possible for it to have a negative effect on the performance of your application or test suite.</p>"}