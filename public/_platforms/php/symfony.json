{"key":"php.symfony","type":"framework","doc_link":"https://docs.sentry.io/platforms/php/guides/symfony/","name":"Symfony","aliases":[],"categories":[],"body":"<p>Symfony is supported via the <a href=\"https://github.com/getsentry/sentry-symfony\"><code>sentry-symfony</code></a> package as a native bundle.</p>\n<h2 id=\"install\" style=\"position:relative;\">Install</h2>\n<p>Install the <code>sentry/sentry-symfony</code> bundle:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\"><span class=\"token function\">composer</span> require sentry/sentry-symfony</code></pre></div>\n<note>\n<p>Due to a bug in all versions below <code>6.0</code> of the <a href=\"https://github.com/sensiolabs/SensioFrameworkExtraBundle\"><code>SensioFrameworkExtraBundle</code></a> bundle, you will likely receive an error during the execution of the command above related to the missing <code>Nyholm\\Psr7\\Factory\\Psr17Factory</code> class. To workaround the issue, if you are not using the PSR-7 bridge, please change the configuration of that bundle as follows:</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml highlight\"><code class=\"language-yaml\"><span class=\"token key atrule\">sensio_framework_extra</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">psr_message</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>For more details about the issue see <a href=\"https://github.com/sensiolabs/SensioFrameworkExtraBundle/pull/710\">https://github.com/sensiolabs/SensioFrameworkExtraBundle/pull/710</a>.</p>\n</note>\n<h2 id=\"configure\" style=\"position:relative;\">Configure</h2>\n<p>Add your </p><div class=\"term-wrapper\"><span class=\"term\">DSN</span><span class=\"description\" role=\"tooltip\" aria-label=\"DSN definition\">The Data Source Name (DSN) key tells the Sentry SDK where to send events, ensuring they go to the right project.</span></div> to <code>config/packages/sentry.yaml</code>:<p></p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml highlight\"><code class=\"language-yaml\"><span class=\"token key atrule\">sentry</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">dsn</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"%env(SENTRY_DSN)%\"</span></code></pre></div>\n<p>And in your <code>.env</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"plain\"><pre class=\"language-plain highlight\"><code class=\"language-plain\">###&gt; sentry/sentry-symfony ###\nSENTRY_DSN=\"___PUBLIC_DSN___\"\n###&lt; sentry/sentry-symfony ###</code></pre></div>\n<alert level=\"warning\" title=\"Performance\">\n<p>Performance monitoring integrations to support </p><div class=\"term-wrapper\"><span class=\"term\">tracing</span><span class=\"description\" role=\"tooltip\" aria-label=\"tracing definition\">The process of logging the events that took place during a request, often across multiple services.</span></div> are enabled by default. To use them, update to the latest version of the SDK.<p></p>\n<p>These integrations hook into critical paths of the framework and of the vendors. As a result, there may be a performance penalty. To disable tracing, please see the <a href=\"https://docs.sentry.io/platforms/php/guides/symfony/tracing/pm-integrations/\">Integrations documentation</a>.</p>\n</alert>\n<p>If you <strong>are not</strong> using Symfony Flex, you'll also need to enable the bundle in <code>config/bundles.php</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token comment\">// ...</span>\n    <span class=\"token class-name class-name-fully-qualified static-context\">Sentry<span class=\"token punctuation\">\\</span>SentryBundle<span class=\"token punctuation\">\\</span>SentryBundle</span><span class=\"token operator\">::</span><span class=\"token keyword\">class</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">[</span><span class=\"token string single-quoted-string\">'all'</span> <span class=\"token operator\">=&gt;</span> <span class=\"token constant boolean\">true</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></span></code></pre></div>\n<h3 id=\"monolog-integration\" style=\"position:relative;\">Monolog Integration</h3>\n<p>If you are using <a href=\"https://github.com/Seldaek/monolog\">Monolog</a> to report events instead of the typical error listener approach, you need this additional configuration to log the errors correctly:</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml highlight\"><code class=\"language-yaml\"><span class=\"token key atrule\">sentry</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">register_error_listener</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Disables the ErrorListener to avoid duplicated log in sentry</span>\n    <span class=\"token key atrule\">register_error_handler</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># Disables the ErrorListener, ExceptionListener and FatalErrorListener integrations of the base PHP SDK</span>\n\n<span class=\"token key atrule\">monolog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">sentry</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> sentry\n            <span class=\"token key atrule\">level</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!php/const</span> Monolog\\Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>ERROR\n            <span class=\"token key atrule\">hub_id</span><span class=\"token punctuation\">:</span> Sentry\\State\\HubInterface</code></pre></div>\n<p>If you are using a version of <a href=\"https://github.com/symfony/monolog-bundle\">MonologBundle</a> prior to <code>3.7</code>, you need to\nconfigure the handler as a service instead:</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml highlight\"><code class=\"language-yaml\"><span class=\"token key atrule\">monolog</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">handlers</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">sentry</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> service\n            <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> Sentry\\Monolog\\Handler\n\n<span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">Sentry\\Monolog\\Handler</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">arguments</span><span class=\"token punctuation\">:</span>\n            <span class=\"token key atrule\">$hub</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'@Sentry\\State\\HubInterface'</span>\n            <span class=\"token key atrule\">$level</span><span class=\"token punctuation\">:</span> <span class=\"token tag\">!php/const</span> Monolog\\Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span>ERROR</code></pre></div>\n<p>Additionally, you can register the <code>PsrLogMessageProcessor</code> to resolve PSR-3 placeholders in reported messages:</p>\n<!-- prettier-ignore -->\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml highlight\"><code class=\"language-yaml\"><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">Monolog\\Processor\\PsrLogMessageProcessor</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> monolog.processor<span class=\"token punctuation\">,</span> <span class=\"token key atrule\">handler</span><span class=\"token punctuation\">:</span> sentry <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"test-the-implementation\" style=\"position:relative;\">Test the implementation</h2>\n<p>To test that both logger error and exception are correctly sent to sentry.io, you can create the following controller:</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre class=\"language-php highlight\"><code class=\"language-php\"><span class=\"token php language-php\"><span class=\"token delimiter important\">&lt;?php</span>\n\n<span class=\"token keyword\">namespace</span> <span class=\"token package\">App<span class=\"token punctuation\">\\</span>Controller</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">use</span> <span class=\"token package\">Psr<span class=\"token punctuation\">\\</span>Log<span class=\"token punctuation\">\\</span>LoggerInterface</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Bundle<span class=\"token punctuation\">\\</span>FrameworkBundle<span class=\"token punctuation\">\\</span>Controller<span class=\"token punctuation\">\\</span>AbstractController</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">use</span> <span class=\"token package\">Symfony<span class=\"token punctuation\">\\</span>Component<span class=\"token punctuation\">\\</span>Routing<span class=\"token punctuation\">\\</span>Annotation<span class=\"token punctuation\">\\</span>Route</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name-definition class-name\">SentryTestController</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">AbstractController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @var LoggerInterface\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$logger</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">__construct</span><span class=\"token punctuation\">(</span><span class=\"token class-name type-declaration\">LoggerInterface</span> <span class=\"token variable\">$logger</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">logger</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$logger</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">/**\n     * @Route(name=\"sentry_test\", path=\"/_sentry-test\")\n     */</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function-definition function\">testLog</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// the following code will test if monolog integration logs to sentry</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-&gt;</span><span class=\"token property\">logger</span><span class=\"token operator\">-&gt;</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'My custom logged error.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// the following code will test if an uncaught exception logs to sentry</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name class-name-fully-qualified\"><span class=\"token punctuation\">\\</span>RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string single-quoted-string\">'Example exception.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></span></code></pre></div>\n<p>After you visit the <code>/_sentry-test</code> page, you can view and resolve the recorded error by logging into <a href=\"https://sentry.io\">sentry.io</a> and opening your </p><div class=\"term-wrapper\"><span class=\"term\">project</span><span class=\"description\" role=\"tooltip\" aria-label=\"project definition\">Represents your service in Sentry and allows you to scope events to a distinct application.</span></div>. Clicking on the error's title will open a page where you can see detailed information and mark it as resolved.<p></p>"}
