{"key":"react-native","type":"language","doc_link":"https://docs.sentry.io/platforms/react-native/","name":"React Native","aliases":[],"categories":["mobile"],"body":"<p>Sentry captures data by using an SDK within your applicationâ€™s runtime.</p>\n<blockquote>\n<p>If you are using Expo, see <a href=\"https://docs.expo.io/guides/using-sentry/\">How to Add Sentry to Your Expo Project</a>. This SDK works for both managed and bare projects.</p>\n</blockquote>\n<p>Run <code>@sentry/wizard</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\">npx @sentry/wizard <span class=\"token parameter variable\">-s</span> <span class=\"token parameter variable\">-i</span> reactNative</code></pre></div>\n<p><a href=\"https://github.com/getsentry/sentry-wizard\">Sentry Wizard</a> will patch your </p><div class=\"term-wrapper\"><span class=\"term\">project</span><span class=\"description\" role=\"tooltip\" aria-label=\"project definition\">Represents your service in Sentry and allows you to scope events to a distinct application.</span></div> accordingly, though you can <a href=\"https://docs.sentry.io/platforms/react-native/manual-setup/manual-setup/\">setup manually</a> if you prefer.<p></p>\n<ul>\n<li>iOS Specifics: When you use Xcode, you can hook directly into the build process to upload debug symbols and source maps.</li>\n<li>Android Specifics: We hook into Gradle for the source map build process. When you run <code>./gradlew assembleRelease</code>, source maps are automatically built and uploaded to Sentry. If you have enabled Gradle's <code>org.gradle.configureondemand</code> feature, you'll need a clean build, or you'll need to disable this feature to upload the source map on every build by setting <code>org.gradle.configureondemand=false</code> or remove it.</li>\n</ul>\n<h3 id=\"initialize-the-sdk\" style=\"position:relative;\">Initialize the SDK</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Sentry <span class=\"token keyword\">from</span> <span class=\"token string\">\"@sentry/react-native\"</span><span class=\"token punctuation\">;</span>\n\nSentry<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">dsn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"___PUBLIC_DSN___\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Set tracesSampleRate to 1.0 to capture 100% of transactions for performance monitoring.</span>\n  <span class=\"token comment\">// We recommend adjusting this value in production.</span>\n  <span class=\"token literal-property property\">tracesSampleRate</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The <code>sentry-wizard</code> will try to add it to your <code>App.tsx</code></p>\n<h3 id=\"wrap-your-app\" style=\"position:relative;\">Wrap your app</h3>\n<p>Wrap your app with Sentry to automatically instrument it with <a href=\"https://docs.sentry.io/platforms/react-native/touchevents/\">touch event tracking</a> and <a href=\"https://docs.sentry.io/platforms/react-native/tracing/instrumentation/automatic-instrumentation/\">automatic performance monitoring</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span>App<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You do not need to do this for Sentry to work or if your app does not have a single parent \"App\" component.</p>\n<h3 id=\"verify\" style=\"position:relative;\">Verify</h3>\n<p>Then create an intentional error, so you can test that everything is working:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My first Sentry error!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Or, try a native crash with:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\">Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">nativeCrash</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>If you're new to Sentry, use the email alert to access your account and complete a product tour.</p>\n<p>If you're an existing user and have disabled alerts, you won't receive this email.</p>\n<h2 id=\"performance\" style=\"position:relative;\">Performance</h2>\n<p>Sentry can measure the performance of your app automatically when instrumented with the following routers:</p>\n<ul>\n<li><a href=\"https://docs.sentry.io/platforms/react-native/tracing/instrumentation/automatic-instrumentation/#react-navigation\">React Navigation</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/react-native/tracing/instrumentation/automatic-instrumentation/#react-navigation-v4\">React Navigation V4 and prior</a></li>\n<li><a href=\"https://docs.sentry.io/platforms/react-native/tracing/instrumentation/automatic-instrumentation/#react-native-navigation\">React Native Navigation</a></li>\n</ul>\n<p>Additionally, you can create transactions and spans programatically:</p>\n<p>For example:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token comment\">// Let's say this function is invoked when a user clicks on the checkout button of your shop</span>\n<span class=\"token function\">shopCheckout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// This will create a new Transaction for you</span>\n  <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">startTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">\"shopCheckout\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// Set transaction on scope to associate with errors and get included span instrumentation</span>\n  <span class=\"token comment\">// If there's currently an unfinished transaction, it may be dropped</span>\n  Sentry<span class=\"token punctuation\">.</span><span class=\"token function\">getCurrentHub</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">configureScope</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">scope</span> <span class=\"token operator\">=&gt;</span> scope<span class=\"token punctuation\">.</span><span class=\"token function\">setSpan</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// Assume this function makes an xhr/fetch call</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token function\">validateShoppingCartOnServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> span <span class=\"token operator\">=</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">startChild</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      result\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">op</span><span class=\"token operator\">:</span> <span class=\"token string\">'task'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">processing shopping cart result</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">processAndValidateShoppingCart</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    span<span class=\"token punctuation\">.</span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    span<span class=\"token punctuation\">.</span><span class=\"token function\">setStatus</span><span class=\"token punctuation\">(</span><span class=\"token string\">'unknown_error'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">throw</span> err<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n    span<span class=\"token punctuation\">.</span><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    transaction<span class=\"token punctuation\">.</span><span class=\"token function\">finish</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>For more information, please refer to the <a href=\"https://docs.sentry.io/platforms/react-native/tracing/instrumentation/\">Sentry React Native documentation.</a></p>\n<h2 id=\"debug-symbols\" style=\"position:relative;\">Debug Symbols</h2>\n<p>We offer a range of methods to provide Sentry with debug symbols so that you can see symbolicated stack traces and triage issues faster.</p>\n<p>Complete stack traces will be shown for React Native Javascript errors by default using Sentry's <a href=\"https://docs.sentry.io/platforms/react-native/sourcemaps/\">automatic source maps upload</a>. To set up manual source maps upload follow <a href=\"https://docs.sentry.io/platforms/react-native/sourcemaps/\">this guide</a>.</p>\n<p>You'll also need to upload <a href=\"https://docs.sentry.io/platforms/react-native/upload-debug/\">Debug Symbols</a> generated by the native iOS and Android tooling for native crashes.</p>\n<h2 id=\"source-context\" style=\"position:relative;\">Source Context</h2>\n<p>If Sentry has access to your application's source code, it can show snippets of code (<em>source context</em>) around the location of stack frames, which helps to quickly pinpoint problematic code.</p>\n<p>Source Context will be shown for React Native Javascript error by default if source maps are uploaded. To set up source maps upload, follow the <a href=\"https://docs.sentry.io/platforms/react-native/sourcemaps/\">Source Maps</a> guide.</p>\n<p>To enable source context for native errors, you'll need to upload native debug symbols to Sentry by following the instructions at <a href=\"https://docs.sentry.io/platforms/react-native/upload-debug/#uploading-source-context-with-sentry-gradle-plugin\">Uploading Source Code Context With Sentry Gradle Plugin</a> and <a href=\"https://docs.sentry.io/platforms/react-native/upload-debug/#uploading-source-context-with-xcode\">Uploading Source Context With Xcode</a>.</p>"}
