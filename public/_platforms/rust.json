{"key":"rust","type":"language","doc_link":"https://docs.sentry.io/platforms/rust/","name":"Rust","aliases":[],"categories":[],"body":"<p>To add Sentry to your Rust </p><div class=\"term-wrapper\"><span class=\"term\">project</span><span class=\"description\" role=\"tooltip\" aria-label=\"project definition\">Represents your service in Sentry and allows you to scope events to a distinct application.</span></div> you just need to add a new dependency to your <code>Cargo.toml</code>:<p></p>\n<div class=\"gatsby-highlight\" data-language=\"toml\"><pre class=\"language-toml highlight\"><code class=\"language-toml\"><span class=\"token punctuation\">[</span><span class=\"token table class-name\">dependencies</span><span class=\"token punctuation\">]</span>\n<span class=\"token key property\">sentry</span> <span class=\"token punctuation\">=</span> <span class=\"token string\">\"0.32.2\"</span></code></pre></div>\n<p><code>sentry.init()</code> will return you a guard that when freed, will prevent process exit until all events have been sent (within a timeout):</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust highlight\"><code class=\"language-rust\"><span class=\"token keyword\">let</span> _guard <span class=\"token operator\">=</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"___PUBLIC_DSN___\"</span><span class=\"token punctuation\">,</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">ClientOptions</span> <span class=\"token punctuation\">{</span>\n    release<span class=\"token punctuation\">:</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token macro property\">release_name!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">..</span><span class=\"token class-name\">Default</span><span class=\"token punctuation\">::</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The quickest way to verify Sentry in your Rust application is to cause a panic:</p>\n<div class=\"gatsby-highlight\" data-language=\"rust\"><pre class=\"language-rust highlight\"><code class=\"language-rust\"><span class=\"token keyword\">fn</span> <span class=\"token function-definition function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> _guard <span class=\"token operator\">=</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"___PUBLIC_DSN___\"</span><span class=\"token punctuation\">,</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token class-name\">ClientOptions</span> <span class=\"token punctuation\">{</span>\n        release<span class=\"token punctuation\">:</span> <span class=\"token namespace\">sentry<span class=\"token punctuation\">::</span></span><span class=\"token macro property\">release_name!</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">..</span><span class=\"token class-name\">Default</span><span class=\"token punctuation\">::</span><span class=\"token function\">default</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Sentry will capture this</span>\n    <span class=\"token macro property\">panic!</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Everything is on fire!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>"}