{"key":"javascript.sveltekit","type":"framework","doc_link":"https://docs.sentry.io/platforms/javascript/guides/sveltekit/","name":"SvelteKit","aliases":[],"categories":["browser","server"],"body":"<p>Configure your app automatically with the <a href=\"https://docs.sentry.io/platforms/javascript/guides/sveltekit/#install\">Sentry wizard</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash highlight\"><code class=\"language-bash\">npx @sentry/wizard@latest <span class=\"token parameter variable\">-i</span> sveltekit</code></pre></div>\n<p>The Sentry wizard will automatically patch your application:</p>\n<ul>\n<li>Create or update <code>src/hooks.client.js</code> and <code>src/hooks.server.js</code> with the default <code>Sentry.init</code> call and Sentry's hooks handlers.</li>\n<li>Update <code>vite.config.js</code> to add source maps upload and auto-instrumentation via Vite plugins.</li>\n<li>create <code>.sentryclirc</code> and <code>sentry.properties</code> files with configuration for sentry-cli (which is used when automatically uploading source maps).</li>\n</ul>\n<p>You can also <a href=\"https://docs.sentry.io/platforms/javascript/guides/sveltekit/manual-setup/\">configure the Sentry SDK manually</a>.</p>\n<p>Configure the Sentry SDK:</p>\n<p>To configure the Sentry SDK, edit the <code>Sentry.init</code> options in <code>hooks.(client|server).(js|ts)</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript highlight\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> Sentry <span class=\"token keyword\">from</span> <span class=\"token string\">\"@sentry/sveltekit\"</span><span class=\"token punctuation\">;</span>\n\nSentry<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">dsn</span><span class=\"token operator\">:</span> <span class=\"token string\">\"___PUBLIC_DSN___\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// Set tracesSampleRate to 1.0 to capture 100%</span>\n  <span class=\"token comment\">// of transactions for performance monitoring.</span>\n  <span class=\"token comment\">// We recommend adjusting this value in production</span>\n  <span class=\"token literal-property property\">tracesSampleRate</span><span class=\"token operator\">:</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The above configuration captures both error and performance data. We recommend adjusting <code>tracesSampleRate</code> in production, see <a href=\"https://docs.sentry.io/platforms/javascript/configuration/sampling/\">Sampling</a>.</p>\n<p>After this step, Sentry will report any uncaught exceptions triggered by your application.</p>\n<p>You can trigger your first event from your development environment by raising an exception somewhere within your application. An example of this would be rendering a button whose <code>on:click</code> handler attempts to invoke a function that doesn't exist:</p>\n<div class=\"gatsby-highlight\" data-language=\"svelte\"><pre class=\"language-svelte highlight\"><code class=\"language-svelte\">&lt;!-- +page.svelte --&gt;\n&lt;button type=\"button\" on:click={unknownFunction}&gt;Break the world&lt;/button&gt;</code></pre></div>\n<p>Once you've verified the SDK is initialized properly and you've sent a test event, check out our <a href=\"https://docs.sentry.io/platforms/javascript/guides/sveltekit/\">complete SvelteKit docs</a> for additional configuration instructions.</p>"}