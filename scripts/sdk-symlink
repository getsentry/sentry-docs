#!/usr/bin/env node

const child_process = require('child_process');
const fs = require("fs");
const path = require("path");

const args = process.argv;
var myArgs = process.argv.slice(2);

var symlinkRecursiveSync = function(src, dest) {
  var exists = fs.existsSync(src);
  var stats = exists && fs.statSync(src);
  var isDirectory = exists && stats.isDirectory();
  if (isDirectory) {
    fs.mkdirSync(dest);
    console.log(`# - New Dir ${dest}`);
    fs.readdirSync(src).forEach(function(childItemName) {
        symlinkRecursiveSync(path.join(src, childItemName),
                            path.join(dest, childItemName));
    });
  } else {
    const cwd = path.join(__dirname, '..');
    console.log(`## - Symlink ${src} -> ${dest}`);
    fs.symlinkSync(path.join(cwd, src), path.join(cwd, dest));
    // child_process.execSync(`ln -s ${src} ${dest}`);
  }
};

if (!myArgs[0] || !myArgs[1]) {
    console.error('Please call this command with `from to`');
    process.exit(1);
}

const root = path.join('src', 'docs', 'sdks');
const src = path.join(root, myArgs[0]);
const dest = path.join(root, myArgs[1]);

console.log(`Looking for ${src} to symlink to ${dest}`);

symlinkRecursiveSync(src, dest);