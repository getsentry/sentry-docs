.prose {
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    &:hover .anchorlink {
      opacity: 1;
    }

    a {
      text-decoration: none;
      font-weight: 500;
    }

    a:hover {
      text-decoration: none;
    }

    a.autolink-heading {
      color: var(--darkPurple);
    }

    code {
      color: var(--darkPurple);
      font-weight: 400;
      background-color: var(--gray-100);
      padding: 3px 6px;
      border-radius: 4px;
      white-space: nowrap;
    }

    scroll-margin-top: calc(var(--header-height) + 1.5rem);
  }

  h1 {
    font-size: 2rem;
    margin: 2rem 0 1rem;
  }

  h2 {
    font-size: 1.5rem;
  }

  hgroup h2 {
    font-weight: 300;
    font-size: 1.3rem;
    color: #3c4257;
    line-height: 2rem;
    margin-bottom: 1.75rem;
  }

  h3 {
    font-size: 1.125rem;
  }

  h4 {
    font-size: 1.075rem;
  }

  h5,
  h6 {
    font-size: 1rem;
  }

  p code,
  li code {
    color: var(--codeColor);
  }

  li h4 {
    margin-top: 0;
  }

  li p {
    margin-bottom: 0;
  }

  a {
    color: var(--accent-9);
    font-weight: normal;

    img {
      display: inline-block;
    }
  }

  code:before,
  code:after {
    content: '';
  }

  hr {
    margin: 2rem 0;
    border-top: 1px solid var(--border-color);
  }

  strong {
    font-weight: 500;
  }

  .anchorlink,
  .anchorlink.before {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    width: 14px;
    max-height: 70%;
    top: 50%;
    transform: translate(-120%, -50%);
    color: var(--accent-9);

    opacity: 0;
    transition: opacity 150ms linear;
  }

  img {
    border: 1px solid var(--border-color);
    border-radius: 4px;
    box-shadow: 0 2px rgba(222, 226, 230, 0.5);
  }

  ol ol,
  ol ul,
  ul ol,
  ul ul {
    margin-bottom: 0;
    margin-top: 0;
  }

  table {
    border-collapse: collapse;
    width: 100%;
    margin-bottom: 1rem;

    td,
    th {
      border: 1px solid var(--border-color);
      padding: 0.75rem;
      vertical-align: top;
    }
  }

  dt + dd {
    margin-bottom: var(--paragraph-margin-bottom);
  }

  [data-onboarding-option].hidden {
    display: none;
  }
  [data-onboarding-option].animate-line {
    animation:
      slideLeft 0.2s ease-out forwards,
      highlight 1.2s forwards;
  }
  [data-onboarding-option].animate-content {
    animation: slideDown 0.2s ease-out forwards;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(-12px);
  }
  to {
    transform: translateY(0);
  }
}

@keyframes slideLeft {
  from {
    transform: translateX(-1ch);
  }
  to {
    transform: translateX(0);
  }
}

@keyframes highlight {
  0% {
    background-color: rgba(255, 255, 255, 0);
  }
  10% {
    background-color: rgba(255, 255, 255, 0.15);
  }
  80% {
    background-color: rgba(255, 255, 255, 0.15);
  }
  100% {
    background-color: rgba(255, 255, 255, 0);
  }
}

.sidebar {
  margin-top: 5rem;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
}

// Config keys
h3.config-key {
  font-family: var(--font-family-monospace);
  font-size: 1.3rem;
}

// Remove the bottom margin from the final direct child.
//
// Example:
//
//  <.content-flush-bottom>
//    <p>This paragraph has a normal bottom margin</p>
//    <p>This paragraph does not have a bottom margin</p>
//  </.content-flush-bottom>
.content-flush-bottom > *:last-child {
  margin-bottom: 0 !important;
}

.bg-dark {
  hr {
    border-color: var(--mediumPurple);
  }
}

dd {
  margin-left: 1.5rem;
}

// Inserts an invisble zero-width, non-breaking space to prevent a word from
// breaking on the adjoining characters. Useful for stopping dashes from
// breaking in code blocks. The special character is placed into the ::after
// content so that it is not included when copy/pasting from code examples.
//
// Example:
// --watch
// -<span class="no-break"></span>-<span class="no-break"></span>watch
//
.no-break {
  white-space: nowrap;
  display: inline-block;
  width: 0;

  &::after {
    content: '\2060';
  }
}

:target {
  scroll-margin-top: calc(var(--header-height) + 1.5rem);
}
