generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  changelogs    Changelog[]
  admin         Boolean     @default(false)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Changelog {
  id          String     @id @default(cuid())
  createdAt   DateTime   @default(now())
  publishedAt DateTime?  @default(now())
  updatedAt   DateTime   @updatedAt
  title       String     @db.VarChar(255)
  slug        String     @unique @db.VarChar(255)
  image       String?
  content     String?
  summary     String?
  published   Boolean    @default(false)
  deleted     Boolean    @default(false)
  authorId    String?
  author      User?      @relation(fields: [authorId], references: [id])
  categories  Category[]
}

model Category {
  id         String      @id @default(cuid())
  name       String      @unique @db.VarChar(255)
  deleted    Boolean     @default(false)
  changelogs Changelog[]
}
